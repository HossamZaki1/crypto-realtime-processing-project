version: "3.8"

services:
  # ───────────────────────────────────────────────────────────────────────────
  # 1) Kafka broker in KRaft mode (no ZooKeeper)
  # ───────────────────────────────────────────────────────────────────────────
  broker:
    image: confluentinc/cp-server:7.9.0
    container_name: kraft_kafka
    ports:
      - '${PORT_BROKER:-29092}:29092'
    environment:
      CLUSTER_ID: '${CLUSTER_ID:-YzUyZWRlYzBhNDkwNDNmNG}'
      KAFKA_NODE_ID: '1'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENERS: 'INTERNAL://broker:9092,EXTERNAL://broker:29092,CONTROLLER://broker:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://broker:9092,EXTERNAL://localhost:${PORT_BROKER:-29092}'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1' # this and next 3 options set to 1 as we have only one broker
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_CONFLUENT_COMMAND_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_METADATA_LOG_REPLICATION_FACTOR: '1'
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: '60000'  # check whether to delete log segments ever minute (default 5 minutes)
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'WARN'
      KAFKA_LOG4J_LOGGERS: "\
        kafka=WARN,\
        kafka.controller=WARN,\
        kafka.log.LogCleaner=WARN,\
        state.change.logger=WARN,\
        kafka.producer.async.DefaultEventHandler=WARN"
    volumes:
      - broker-data:/var/lib/kafka/data

  # ───────────────────────────────────────────────────────────────────────────
  # 2) PostgreSQL (stores your aggregate table)
  # ───────────────────────────────────────────────────────────────────────────
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: "myuser"
      POSTGRES_PASSWORD: "secretpass"
      POSTGRES_DB: "cryptodb"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser", "-d", "cryptodb"]
      interval: 10s
      retries: 5

  # ───────────────────────────────────────────────────────────────────────────
  # 3) Spark Master
  # ───────────────────────────────────────────────────────────────────────────
  spark-master:
    image: bitnami/spark:3.5.1
    container_name: '${COMPOSE_PROJECT_NAME:-lsw}-spark-master'
    ports:
      - '${PORT_SPARK_MASTER_UI:-8082}:8082'
      - '${PORT_SPARK_MASTER:-7077}:7077'
    environment:
      SPARK_MODE: 'master'

  # ───────────────────────────────────────────────────────────────────────────
  # 4) Spark Worker
  # ───────────────────────────────────────────────────────────────────────────
  spark-worker:
    image: bitnami/spark:3.5.1
    container_name: '${COMPOSE_PROJECT_NAME:-lsw}-spark-worker'
    depends_on:
      - spark-master
    ports:
      - '${PORT_SPARK_WORKER_UI:-8081}:8081'
    environment:
      SPARK_MODE: 'worker'
      SPARK_MASTER_URL: 'spark://spark-master:7077'

  # ───────────────────────────────────────────────────────────────────────────
  # 6) CryptoStreamProcessor
  # ───────────────────────────────────────────────────────────────────────────
  crypto-processor:
    image: bitnami/spark:3.5.1
    container_name: crypto-processor
    depends_on:
      - spark-master
      - spark-worker
      - postgres
    user: root
    volumes:
      - './target/CryptoStreamingProject1-1.0-SNAPSHOT.jar:/opt/bitnami/spark/app/crypto.jar:ro'
    entrypoint: >
      spark-submit
        --master spark://spark-master:7077
        --class org.example.CryptoStreamProcessor
        --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1,org.postgresql:postgresql:42.5.0
        /opt/bitnami/spark/app/crypto.jar

volumes:
  broker-data:
  postgres-data:
